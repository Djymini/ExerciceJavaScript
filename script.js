// //Exercice1
// /*
//    * -------------------------------------------------------
//    * 1 - Afficher dans la console "J'aime peindre" sur une premi√®re ligne puis "J'aimerais devenir peintre" sur une autre ligne
//    * -------------------------------------------------------
// */
// console.log("J'aime peindre");
// console.log("J'aimerais devenir peintre");

// /*
//    * -------------------------------------------------------
//    * 2 - Afficher la m√™me chose mais sur une seule ligne
//    * -------------------------------------------------------
// */
// console.log("J'aime peindre " + "J'aimerais devenir peintre");

// /**
//    * -------------------------------------------------------
//    * 3 - Ajouter ensuite un warning dans la console "Mais cela demande beaucoup d'efforts"
//    * -------------------------------------------------------
// */
// console.warn("Mais cela demande beaucoup d'efforts");

// /*
//    * -------------------------------------------------------
//    * 4 - Enfin, ajouter une erreur "Je n'ai pas assez de temps car j'ai d√©j√† un m√©tier, 3 passions, une femme et 4 enfants et je dois dormir la nuit"
//    * -------------------------------------------------------
// */
// console.error("Je n'ai pas assez de temps car j'ai d√©j√† un m√©tier, 3 passions, une femme et 4 enfants et je dois dormir la nuit");

// /*
//   * -------------------------------------------------------
//   * 5 - Afficher le nombre 42 gr√¢ce √† 3 suites d'op√©rations diff√©rentes.
//   * Uniquement gr√¢ce √† jeu de donn√©es ci-dessus. 
//   * Toutes les donn√©es doivent √™tre utilis√©es une fois et ne peuvent √™tre utilis√©es qu'une seule fois.
//   * 
//   * Ex : 
//   * const set1 = (number1 - number2) * number3
//   * const set2 = (number4 + number5) / number6
//   * const set2 = (number7 - number9) * number9 + number 10
//   * -------------------------------------------------------
// */
// // Voici un jeu de 10 donn√©es. Ne pas y toucher :) 
// const number1 = 99;
// const number2 = 50;
// const number3 = 1;
// const number4 = 7;
// const number5 = 3;
// const number6 = 10;
// const number7 = 8;
// const number8 = 2;
// const number9 = 1;
// const number10 = 4;

// // const set1 = 50 - 8;
// const set1 = (number1/number5)+number7+number3;
// const set2 = number2-(number4 +number9);
// const set3 = number10*number6 + number8;

// console.log(
//    set1,
//    set2,
//    set3
// );

// /*
//    * -------------------------------------------------------
//    * 6 - Afficher le reste de la division de 6 par 2, de 14 par 4 et de 99 par 3
//    * -------------------------------------------------------
// */
// console.log(
//     6%2, 
//     14%4,
//     99%3
// );


// //Exercice2
// /*
//    * -------------------------------------------------------
//    * 1 - Renommer les variables correctement
//    * -------------------------------------------------------
// */

// let firstName = "Bruno";

// let description = "Salut je m'appelle Bruno et voici ma description";

// const job = "Analyste financier au Y√©men";

// let age = 23;

// let livingCity = "Bordeaux";

// let numberList = "Une liste de nombres";

// const bondName = "le pr√©nom du plus grand agent secret de tous les temps";


// //Exercice 3
// /*
//    * -------------------------------------------------------
//    * 1 - Afficher le type de chacune des variables dans la console
//    * -------------------------------------------------------
// */
// const firstname = "Michel";
// const lastname = "Polnareff";
// let age = 123;
// const isUserLoggedIn = false;
// const account = undefined;
// let account2;
// const myVar = null;
// const user = {
//     firstname: "Michel",
//     lastname: "Polnareff",
//     email: "mich-mich@pol.com"
// }
// const colors = ['red', 'blue', 'green'];
// const onSayHello = function sayHello() {
//     return 'Hello';
// }
// console.log("firstname type is : " +typeof firstname);
// console.log("lastname type is : " +typeof lastname);
// console.log("age type is : " +typeof age);
// console.log("isUserLoggedIn type is : " +typeof isUserLoggedIn);
// console.log("account type is : " +typeof account);
// console.log("account2 type is : " +typeof account2);
// console.log("myVar type is : " +typeof myVar);
// console.log("user type is : " +typeof user);
// console.log("colors type is : " +typeof colors);
// console.log("onSayHello type is : " +typeof onSayHello);


// // Exercice4
// /*
//    * -------------------------------------------------------
//    * 1 - Si la variable guessName est √©gale √† "Sphinx", afficher "Vive l'√âgypte".
//    *  Sinon, afficher "De toute fa√ßon je ne comprends rien aux cartes"
//    * -------------------------------------------------------
// */
// // Voici une variable : ne pas toucher :) 
// const guessName = "Sphinx";

// if (guessName == "Sphinx") {
//     console.log("Vive l'√âgypte");
// }
// else {
//     console.log("De toute fa√ßon je ne comprends rien aux cartes");  
// }

// /*
//    * -------------------------------------------------------
//    * 2 - Demander √† l'utilisateur de saisir un mot de passe (voir la fonction Javascript ‚Äúprompt‚Äù)
//    *  Si ce mot de passe correspond √† la variable comparedString, afficher "Bienvenue BG ! üôå" dans la console
//     Sinon: afficher "C'est NON ü¶Ñ".
//    * -------------------------------------------------------
// */
// // Voici une variable : ne pas toucher :) 
// const comparedString = "secret"
// let mdpWriteByUser = prompt("Saisissez un mot de passe");

// if(mdpWriteByUser == comparedString) {
//     console.log("Bienvenue BG ! üôå");
// }
// else {
//     console.log("C'est NON ü¶Ñ");
// }

// /*
//    * -------------------------------------------------------
//    * 3 - √âcrire un programme qui demande √† l'utilisateur d'entrer son √¢ge (en utilisant ‚Äúprompt‚Äù) et qui affiche ensuite un message en fonction de sa tranche d'√¢ge :
//     Si l'√¢ge est inf√©rieur √† 3 : "Hello, Baby üçº!"
//     Si l'√¢ge est inf√©rieur √† 18: "Hi! üëã"
//     Si l'√¢ge est sup√©rieur √† 100: "Greetings üññ"
//     Dans les autres cas: "Wow... üò≤"
//    * -------------------------------------------------------
// */
// let ageOfUser = prompt("Saisissez votre age");
// if(ageOfUser < 3) {
//     console.log("Hello, Baby üçº!"); 
// }
// else if(ageOfUser < 18) {
//     console.log("Hi! üëã"); 
// }
// else if(ageOfUser > 100) {
//     console.log("Greetings üññ"); 
// }
// else {
//     console.log("Wow... üò≤"); 
// }

// /*
//    * -------------------------------------------------------
//    * 4. √âcrire un programme qui demande √† l'utilisateur son nom et son √¢ge et qui v√©rifie si le nom est √©gal √† "Bob" et si l'√¢ge est √©gal √† 30.
//    *  Si les deux conditions sont v√©rifi√©es, afficher "Welcome", sinon "Go away".
//    * -------------------------------------------------------
// */
// let nameOfUser = prompt("Saissisez votre nom");
// let ageOfUser2 = prompt("Saissisez votre age");

// if(nameOfUser.toLowerCase() == "bob" && ageOfUser2 == 30) {
//     console.log("Welcome");    
// }
// else {
//     console.log("Go away");
    
// }

// /*
//    * -------------------------------------------------------
//    * 5. En Javascript, on peut r√©cup√©rer la jour de la semaine en cours en utilisant new Date().getDay().
//    *  Cette expression nous nous retourne un nombre entre 0 (dimanche) et 6 (samedi).
//     ‚Üí Utiliser une structure switch...case pour afficher dans la console le nom du jour de la semaine en fonction du nombre retourn√©. 
//    * -------------------------------------------------------
// */
// const toDay = new Date().getDay();

// switch (toDay) {
//     case 1:
//         console.log("Lundi");
//         break;
//     case 2:
//         console.log("Mardi");
//         break;
//     case 3:
//         console.log("Mercredi");
//         break;
//     case 4:
//         console.log("Jeudi");
//         break;
//     case 5:
//         console.log("Vendredi");
//         break;
//     case 6:
//         console.log("Samedi");
//         break;
//     case 0:
//         console.log("Dimanche");
//         break;
//     default:
//         break;
// }


// /*
//    * -------------------------------------------------------
//    * 6. R√©√©crire la condition en utilisant l'op√©rateur ternaire
//    * -------------------------------------------------------
// */
// // Voici un bout de code. Ne pas toucher !
// const animal = {
//     name: "Lucky",
//     specie: "Cat",
//     color: "Black"
// }

// if(animal.name === 'Lucky') {
//     console.log("Voici un P√¥tichat mignon");
// } else {
//     console.log("Argh ! Ce n'est pas mon chat...");
// }

// animal.name === 'Lucky' ?  console.log("Voici un P√¥tichat mignon") : console.log("Argh ! Ce n'est pas mon chat...")


// /**
//    * -------------------------------------------------------
//    * 7 - Pour chaque donn√©e, v√©rifier si elle est paire. Si oui, afficher sa valeur suivie de "est paire ‚úÖ". Sinon, afficher sa valeur suivie de "Impaire ‚ùå"
//    * -------------------------------------------------------
// */
// // Voici un jeu de donn√©es : ne pas toucher :) 
// const n1 =  1
// const n2 =  13
// const n3 =  20
// const n4 =  41
// const n5 =  70
// const n6 =  100

// if (n1 % 2 == 0) {
//     console.log(n1 + ' est paire ‚úÖ');
// } else {
//     console.log(n1 + ' est impaire');
// }
// if (n2 % 2 == 0) {
//     console.log(n2 + ' est paire ‚úÖ');
// } else {
//     console.log(n2 + ' est impaire');
// }
// if (n3 % 2 == 0) {
//     console.log(n3 + ' est paire ‚úÖ');
// } else {
//     console.log(n3 + ' est impaire');
// }
// if (n4 % 2 == 0) {
//     console.log(n4 + ' est paire ‚úÖ');
// } else {
//     console.log(n4 + ' est impaire');
// }
// if (n5 % 2 == 0) {
//     console.log(n5 + ' est paire ‚úÖ');
// } else {
//     console.log(n5 + ' est impaire');
// }
// if (n6 % 2 == 0) {
//     console.log(n6 + ' est paire ‚úÖ');
// } else {
//     console.log(n6 + ' est impaire');
// }


// //Exercice5
// /*
//    * -------------------------------------------------------
//    * 1 - √âcrire une fonction qui prend 2 param√®tres et qui retourne la somme de ces 2 param√®tres. Afficher le r√©sultat dans la console.
//    * -------------------------------------------------------
// */
// function addKevin(a,b) {
//     let somme = a+b;
//     return somme;
// }
// console.log(addKevin(2,8));

// /*
//    * -------------------------------------------------------
//    * 2 - √âcrire une fonction qui prend 2 param√®tres et qui retourne la somme de :
//    *  ‚Üí la ra√ßine carr√©e du premier param√®tres
//    *  ‚Üí le second param√®tre √† la puissance 7
//    *  Afficher le r√©sultat dans la console.
//    * -------------------------------------------------------
// */
// function calcKevin(a,b) {
//     let somme = Math.sqrt(a) + Math.pow(b,7);
//     return somme;
// }
// console.log(calcKevin(25,2));

// /*
//    * -------------------------------------------------------
//    * 3 - Cr√©er une fonction qui v√©rifie si l‚Äôutilisateur est apte √† apprendre du Javascript : 
//     avec prompt, demander successivement √† l‚Äôutilisateur les deux langages de programmation √† apprendre avant de d√©marrer le JS
//     ‚Üí S‚Äôil r√©pond successivement HTML puis CSS, alors la fonction retourne vrai ; sinon faux.
//     ‚Üí Si l‚Äôex√©cution de la fonction retourne vrai, alors la console affiche ‚ÄúBienvenue en JS jeune √©ph√®be‚Äù
//     ‚Üí Si l‚Äôex√©cution de la fonction retourne faux, alors la console affiche ‚ÄúSolidifie tes acquis : rien n‚Äôest impossible √† qui r√™ve, ose, travaille et n‚Äôabandonne jamais‚Äù
//    * -------------------------------------------------------
// */
// let questionJave1 = prompt("Quel est le premier langage √† apprendre avant le JS ?");
// let questionJave2 = prompt("Quel est l'autre langage √† apprendre avant le JS ?");

// if(questionJave1.toLocaleLowerCase() == "html" && questionJave2.toLocaleLowerCase() == "css") {
//     console.log("Bienvenue en JS jeune √©ph√®be");
// }
// else {
//     console.log("Solidifie tes acquis : rien n‚Äôest impossible √† qui r√™ve, ose, travaille et n‚Äôabandonne jamais");
// }


// //Exercice6
// // Voici un jeu de donn√©es : interdiction d'y toucher :) 
// const characterNames = [
//     "63AIS",
//     "A'misandra",
//     "Amimari",
//     "Alika",
//     "54B2",
//     "A'merpact",
//     "Amazora",
//   ];
  
//   /*
//    * -------------------------------------------------------
//    * 1 - Afficher le nombre de personnages dans le tableau 
//    * -------------------------------------------------------
//    */
//   console.log(characterNames.length);
  
  
//   /*
//    * -------------------------------------------------------
//    * 2 - Afficher le nom du premier personnage du tableau
//    * -------------------------------------------------------
//    */
//   console.log(characterNames[0]);
  
  
//   /*
//    * -------------------------------------------------------
//    * 3 - Afficher le nom du dernier personnage (le 7eme)
//    * -------------------------------------------------------
//    */
//   console.log(characterNames[6]);
  
  
//   /*
//    * -------------------------------------------------------
//    * 4 - Afficher le nom du dernier personnage **SANS** 
//    * savoir qu'il est le 7eme
//    * -------------------------------------------------------
//    */
//   console.log(characterNames[characterNames.length-1]);
  
  
//   /*
//    * -------------------------------------------------------
//    * 5 - Afficher les noms de tous les personnages
//    * -------------------------------------------------------
//    */
//  for (let index = 0; index < characterNames.length; index++) {
//     console.log(characterNames[index]);
//  }
  
  
//   /*
//    * -------------------------------------------------------
//    * 6 - Afficher le nom de chaque personnage accompagn√© du 
//    * nombre de caract√®res qu'il contient. Ex: Alika (5)
//    * -------------------------------------------------------
//    */
//   for (let index = 0; index < characterNames.length; index++) {
//     console.log(characterNames[index] + " (" + index + ")");
//   }
  
  
//   /*
//    * -------------------------------------------------------
//    * 7 - Afficher le nom de chaque personnage en minuscules
//    * -------------------------------------------------------
//    */
//   for (let index = 0; index < characterNames.length; index++) {
//     console.log(characterNames[index].toLowerCase());
//   }
  
  
  
  
//   /*
//    * -------------------------------------------------------
//    * 8 - Afficher le nombre de personnages dont le nom 
//    * contient la lettre 'a' (minuscule ou majuscule)
//    * -------------------------------------------------------
//    */
//   for (let index = 0; index < characterNames.length; index++) {
//     if(characterNames[index].indexOf("a") > -1 || characterNames[index].indexOf("A") > -1) {
//         console.log(characterNames[index]);
//     }
//   }
  
  
  
//   /*
//    * -------------------------------------------------------
//    * 9 - Cr√©er une fonction `search(needle)` qui renvoie 
//    * les personnages dont le nom contient les lettres 
//    * pass√©es en param√®tre.
//    * 
//    * Ex : search('Amim') doit renvoyer 'Amimari'
//    * ------------------------------------------------------- 
//    */
//   function search() {
//     let a = prompt("Que recherchez-vous ?");
//     for (let index = 0; index < characterNames.length; index++) {
//         if(characterNames[index].indexOf(a) > -1) {
//             console.log(characterNames[index]);
//         }
//       }
//   }
//   search();

// //Exercice6 Astro
// // Signes astrologiques fournis sous forme de cha√Æne de caract√®res
// const aries = `‚ôà`;
// const taurus = `‚ôâ`;
// const gemini = `‚ôä`;
// const cancer = `‚ôã`;
// const leo = `‚ôå`;
// const virgo = `‚ôç`;
// const libra = `‚ôé`;
// const scorpio = `‚ôè`;
// const sagittarius = `‚ôê`;
// const capricorn = `‚ôë`;
// const aquarius = `‚ôí`;
// const pisces = `‚ôìÔ∏é`;

// // Ces signes astrologiques peuvent √™tre organis√©s en √©l√©ments de la terre : Terre, Eau, Air, Feu
// const fireSigns = [aries, leo];
// const earthSigns = [taurus, virgo, capricorn, sagittarius];
// const airSigns = [gemini, libra, aquarius];
// const waterSigns = [cancer, scorpio, pisces];



// // √âtape 1 : Sagittarius est manquant dans les signes du feu. L'ajouter √† la fin du tableau et v√©rifier le r√©sultat.
// // √©crire le code ici
// fireSigns.push(sagittarius);

// // test (√† ne pas toucher) : 
// console.log(fireSigns[fireSigns.length - 1] === "‚ôê" ? "Good Answer ‚úÖ" : "Wrong Answer ‚ùå");


// // √âtape 2 : Sagittarius ne devrait plus faire partie des √©l√©ments de la terre. Le retirer et v√©rifier le r√©sultat.
// // √©crire le code ici
// earthSigns.pop();

// // test (√† ne pas toucher)
// console.log(earthSigns[earthSigns.length - 1] !== "‚ôê" ? "Good Answer ‚úÖ" : "Wrong Answer ‚ùå");


// // √âtape 3 : initialiser un tableau et le stocker dans une variable nomm√©e "zodiacSigns"
// // √©crire le code ici
// let zodiacSigns = [];


// // √âtape 4 : fusionner Feu, Terre, Eau et Air dans zodiacSigns (dans cet ordre)
// // √©crire le code ici
// zodiacSigns = fireSigns.concat(earthSigns);
// zodiacSigns = zodiacSigns.concat(waterSigns);
// zodiacSigns = zodiacSigns.concat(airSigns);

// // test (√† ne pas toucher)
// console.log((zodiacSigns !== null && zodiacSigns.toString() === "‚ôà,‚ôå,‚ôê,‚ôâ,‚ôç,‚ôë,‚ôã,‚ôè,‚ôìÔ∏é,‚ôä,‚ôé,‚ôí") ? "Good Answer ‚úÖ" : "Wrong Answer ‚ùå");

// // √âtape 5 : compl√©ter la fonction ci-dessous pour afficher le nombre d'√©l√©ments dans le tableau zodiacSigns
// // √©crire le code ici
// console.log(zodiacSigns.length);


//Exercice7
// Voici un objet qui repr√©sente un Chat : interdit d'y toucher :) 
const billyTheCat = {
    name: "billy",
    color: "black",
    favouriteFoods: ["fish", "chicken"],
    isHungry: true,
    meow: function () {
        return "Meeeeeeeow";
    }
}

/*
 * -------------------------------------------------------
 * 1 - Afficher les valeurs de chacunes des cl√©s
 * -------------------------------------------------------
 */
console.log("name : " + billyTheCat.name);
console.log("color : " + billyTheCat.color);
console.log("favouriteFoods : " + billyTheCat.favouriteFoods);
console.log("isHungry : " + billyTheCat.isHungry);
console.log("meow : " + billyTheCat.meow);



/**
 * -------------------------------------------------------
 * 2 - Gr√¢ce √† prompt(), afficher la valeur de la cl√© "color"
 * -------------------------------------------------------
 */
let demand = prompt("Que voulez-vous ?");
console.log(billyTheCat[demand]);



// Voici un tableau d'objets : interdit d'y toucher  :) 
const animals = [
    { name: "kitty", species: "cat", noise: "meow" },
    { name: "skaly", species: "squale", noise: "frrrrrr" },
    { name: "wormy", species: "worm", noise: "????" },
    { name: "Pikatchue", species: "electrick mouse", noise: "pikaaaaa" }
];

/*
 * -------------------------------------------------------
 * 3 - Afficher le dernier √©l√©ment
 * -------------------------------------------------------
 */
console.log(animals[3]);



/**
 * -------------------------------------------------------
 * 3 - Afficher le dernier √©l√©ment sans savoir que c'est le 4√®me
 * -------------------------------------------------------
 */
console.log(animals[animals.length-1]);


/**
 * -------------------------------------------------------
 * 4 - Supprimer le nom du 2√®me animal et l'esp√®ce du 3√®me
 * -------------------------------------------------------
 */
delete animals[1].name;
delete animals[2].species;



/**
 * -------------------------------------------------------
 * 5 - Remplacer le nom du premier animal par celui du 4√®me (2 fa√ßons de faire)
 * -------------------------------------------------------
 */
animals[0].name = animals[3].name;
console.log(animals);



// Voici un objet qui contient (entre autres) une fonction : interdit d'y toucher :) 
const apple = {
    isEaten: false,
    eat: function () {
        return this.isEaten ? "le fruit a d√©j√† √©t√© mang√©" : this.isEaten = true;
    }
}

/**
 * -------------------------------------------------------
 * 6 - En manipulant l'objet, afficher "le fruit a d√©j√† √©t√© mang√©"
 * -------------------------------------------------------
 */
apple.eat();
if (apple.isEaten) {
  console.log(apple.eat());
}